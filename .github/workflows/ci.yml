name: CI

on:
  push:
    branches: [ "master", "ci" ]
  pull_request:
    branches: [ "master", "ci" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  build:
    strategy:
      matrix:
        os: [macos-11, windows-2019]
        rust: [nightly, beta, stable, 1.48.0]
        include:
          - os: ubuntu-20.04
            compiler: gcc-7
            rust: stable
          - os: ubuntu-20.04
            compiler: clang-7
            rust: stable
          - os: ubuntu-18.04
            compiler: clang-3.9
            rust: stable
          - os: ubuntu-18.04
            compiler: clang-3.9
            rust: 1.48.0

    runs-on: ${{ matrix.os }}

    steps:
      - if: matrix.os == 'ubuntu-18.04'
        name: Install clang-3.9
        env:
          CC: clang-3.9
          CXX: clang++-3.9
        run: |
          sudo apt-get update
          sudo apt-get install clang-3.9
          clang-3.9 --version
          clang++-3.9 --version

      - if: ${{ matrix.compiler == 'clang-7' && matrix.os == 'ubuntu-20.04' }}
        name: Install clang-7
        env:
          CC: clang-7
          CXX: clang++-7
        run: |
          sudo apt-get update
          sudo apt-get install clang-7
          clang-7 --version
          clang++-7 --version
          
      - if: ${{ matrix.compiler == 'gcc-7' && matrix.os == 'ubuntu-20.04' }}
        name: Install gcc-7
        env:
          CC: gcc-7
          CXX: g++-7
        run: |
          sudo apt-get update
          sudo apt-get install gcc-7 g++-7
          gcc-7 --version
          g++-7 --version

      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - uses: actions/checkout@v3
      - name: Checkout submodule
        run: git submodule update --init --recursive
      - run: cargo build --verbose
      - run: cargo test -- --nocapture

  fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodule
        run: git submodule update --init --recursive
      - run: cargo fmt